/* @flow */

import React from 'react';

import PaginationLink from './PaginationLink';
import Sizes from './Sizes';

export type TProps = {|
  params: Object,
  prefix?: string,
  total: number,
|};

export const Pagination = (props: TProps) => {
  const prfOff = [props.prefix, 'offset'].filter(Boolean).join('_');
  const prfSize = [props.prefix, 'size'].filter(Boolean).join('_');

  const offset = props.params[prfOff];
  const size = props.params[prfSize];
  const prev = Math.max(offset - size, 0);
  const last = props.total - (props.total % size);
  const next = Math.min(offset + size, last);
  const prevPred = offset !== 0;
  const nextPred = offset < last;

  return (
    <div>
      <Sizes prfSize={prfSize} size={size} />
      <PaginationLink pred={prevPred} prfOff={prfOff} offset={0}>{' << '}</PaginationLink>
      <PaginationLink pred={prevPred} prfOff={prfOff} offset={prev}>{' < '}</PaginationLink>
      {Math.floor(offset / size) + 1} / {Math.ceil(props.total / size)}
      <PaginationLink pred={nextPred} prfOff={prfOff} offset={next}>{' > '}</PaginationLink>
      <PaginationLink pred={nextPred} prfOff={prfOff} offset={last}>{' >> '}</PaginationLink>
    </div>
  );
};

export default Pagination;

/* @flow */

import React from 'react';
import { compose, withState, mapProps, pure } from 'recompose';
import theme from '@ncigdc/theme';
import { Row, Column } from '@ncigdc/uikit/Flex';
import Link from '../Links/Link';

import type { TBucket } from './types';

type TProps = {
  buckets: [TBucket],
  field: string,
  toggleCollapsed: Function,
};

const styles = {
  container: {
    padding: '1rem 1.2rem',
  },
  header: {
    color: theme.primaryLight1,
    fontSize: '1.7rem',
    marginBottom: '0.5rem',
    cursor: 'pointer',
  },
  bucketRow: {
    padding: '0.3rem 0',
  },
  bucketLink: {
    color: '#3a3a3a',
    textDecoration: 'none',
  },
  toggleMore: {
    marginLeft: 'auto',
    color: theme.primaryLight1,
    fontSize: '1.2rem',
    cursor: 'pointer',
    ':hover': {
      color: 'blue',
      textDecoration: 'underline',
    },
  },
  bottomRow: {
    padding: '0.5rem',
  },
};

const TermAggregation = (props: TProps) => {
  const dotField = props.field.replace(/__/g, '.');

  return (
    <Column style={styles.container}>
      <Row style={styles.header} onClick={() => props.toggleCollapsed()}>
        <h3>{dotField}</h3>
      </Row>
      <div>{
        props.buckets.map(bucket => (
          <div key={bucket.key}>
            <Link
              merge="toggle"
              query={{
                offset: 0,
                filters: {
                  op: 'and',
                  content: [{
                    op: 'in',
                    content: {
                      field: dotField,
                      value: [bucket.key],
                    },
                  }],
                },
              }}
            >
              {bucket.key}
            </Link>
            <span>{bucket.doc_count}</span>
          </div>
        ))
      }</div>
    </Column>
  );
};

const enhance = compose(
  withState('state', 'setState', { collapsed: false, showingMore: false }),
  mapProps(({ setState, ...rest }) => ({
    toggleCollapsed: () => setState(state => ({ collapsed: !state.collapsed })),
    toggleShowMore: () => setState(state => ({ showingMore: !state.showingMore })),
    ...rest,
  })),
  pure
);

export default enhance(TermAggregation);

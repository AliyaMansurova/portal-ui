// @flow

import React from 'react';
import { LocationSubscriber } from 'react-router/Broadcasts';

import type { TRawQuery } from '@ncigdc/utils/uri/types';

import Tabs from '@ncigdc/uikit/Tabs';

import Link from '@ncigdc/components/Links/Link';

/*----------------------------------------------------------------------------*/

type TTabbedAggregationsProps = {
  aggregations: [],
  defaultDocType: string,
};
type TTabbedAggregations = (props: TTabbedAggregationsProps) => ReactClass<{}>;
const TabbedAggregations: TTabbedAggregations = ({
  aggregations,
  defaultDocType,
} = {}) => (
  <LocationSubscriber>{(ctx: {| pathname: string, query: TRawQuery |}) => (
    <Tabs
      tabStyle={{ padding: 0 }}
      tabs={aggregations.map(x =>
        <Link
          style={{ padding: '1.2rem 1.8rem', textDecoration: 'none', display: 'inline-block' }}
          key={x.docType}
          query={{ facetTab: x.docType }}
          merge
        >
          {x.docType}
        </Link>
      )}
      activeIndex={(ctx.query || {}).facetTab === defaultDocType || !(ctx.query || {}).facetTab ? 0 : 1}
    >
      {
        (aggregations.find(x => x.docType === (ctx.query || {}).facetTab) ||
        aggregations.find(x => x.docType === defaultDocType)).component
      }
    </Tabs>
  )}</LocationSubscriber>
);

export default TabbedAggregations;

/* @flow */

import React from 'react';
import Relay from 'react-relay';

import Pagination from '@ncigdc/components/Pagination';
import Showing from '@ncigdc/components/Pagination/Showing';

import CaseTr from './CaseTr';

import type { TTableProps } from './types';

export const CaseTableComponent = (props: TTableProps) => {
  const prefix = 'cases';

  return (
    <div>
      <Showing prefix={prefix} params={props.relay.route.params} total={props.hits.pagination.total} />
      <table>
        <thead>
          <tr>
            <th rowSpan="2">Case UUID</th>
            <th rowSpan="2">Project</th>
            <th rowSpan="2">Primary Site</th>
            <th rowSpan="2">Gender</th>
            <th rowSpan="2">Files</th>
            <th colSpan="6">Available Cases per Data Category</th>
            <th rowSpan="2">Annotations</th>
          </tr>

          <tr>
            <th>Seq</th>
            <th>Exp</th>
            <th>SNV</th>
            <th>CNV</th>
            <th>Clinical</th>
            <th>Bio</th>
          </tr>
        </thead>
        <tbody>
          {props.hits.edges.map(e => (
            <CaseTr {...e} key={e.node.id} />
          ))}
        </tbody>
      </table>
      <Pagination prefix={prefix} params={props.relay.route.params} total={props.hits.pagination.total} />
    </div>
  );
};

export const CaseTableQuery = {
  fragments: {
    hits: () => Relay.QL`
      fragment on CaseConnection {
        pagination {
          sort
          total
          size
          offset
        }
        edges {
          node {
            id
            ${CaseTr.getFragment('node')}
          }
        }
      }
    `,
  },
};

const CaseTable = Relay.createContainer(
  CaseTableComponent,
  CaseTableQuery
);

export default CaseTable;

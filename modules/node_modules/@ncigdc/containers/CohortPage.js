/* @flow */

import React from 'react';
import Relay from 'react-relay';

import SearchPage from '@ncigdc/components/SearchPage';
import TabbedLinks from '@ncigdc/components/TabbedLinks';

import CaseTable from './CaseTable';
import CaseAggregations from './CaseAggregations';
import FileTable from './FileTable';
import FileAggregations from './FileAggregations';

export type TProps = {
  viewer: {
    cases: {
      aggregations: string,
      hits: string,
    },
    files: {
      aggregations: string,
      hits: string,
    },
  },
};

export const CohortPageComponent = (props: TProps) => (
  <SearchPage
    Facets={
      <TabbedLinks
        queryParam="facetTab"
        defaultIndex={0}
        links={[
          {
            text: 'cases',
            component: (
              <div>TODO</div>
            ),
          },
          {
            text: 'genes',
            component: <div>TODO</div>,
          },
          {
            text: 'mutations',
            component: <div>TODO</div>,
          },
        ]}
      />
    }
    Results={<div>TODO</div>}
  />
);

export const CohortPageQuery = {
  initialVariables: {
    cases_offset: null,
    cases_size: null,
    cases_sort: null,
    files_offset: null,
    files_size: null,
    files_sort: null,
    filters: null,
  },
  fragments: {
    viewer: () => Relay.QL`
      fragment on Root {
        cases {
          aggregations(filters: $filters) {
            ${CaseAggregations.getFragment('aggregations')}
          }
          hits(first: $cases_size offset: $cases_offset, filters: $filters) {
            ${CaseTable.getFragment('hits')}
          }
        }
        files {
          aggregations(filters: $filters) {
            ${FileAggregations.getFragment('aggregations')}
          }
          hits(first: $files_size offset: $files_offset, filters: $filters) {
            ${FileTable.getFragment('hits')}
          }
        }
      }
    `,
  },
};

const CohortPage = Relay.createContainer(
  CohortPageComponent,
  CohortPageQuery
);

export default CohortPage;

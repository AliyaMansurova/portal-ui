/* @flow */

import React from 'react';
import Relay from 'react-relay';

import Table from '@ncigdc/uikit/Table';

import Pagination from '@ncigdc/components/Pagination';
import Showing from '@ncigdc/components/Pagination/Showing';

import AnnotationTr from './AnnotationTr';

import type { TTableProps } from './types';

export const AnnotationTableComponent = (props: TTableProps) => (
  <div>
    <div style={{ backgroundColor: 'white', padding: '1rem' }}>
      <Showing
        docType="annotations"
        params={props.relay.route.params}
        total={props.hits.pagination.total}
      />
    </div>
    <div style={{ overflowX: 'auto' }}>
      <Table
        headings={[
          'UUID',
          'Case UUID',
          'Project',
          'Entity Type',
          'Entity UUID',
          'Category',
          'Classification',
          'Date Created',
        ]}
        body={
          <tbody>
            {props.hits.edges.map((e, i) => (
              <AnnotationTr {...e} key={e.node.id} index={i} />
            ))}
          </tbody>
        }
      />
    </div>
    <Pagination params={props.relay.route.params} total={props.hits.pagination.total} />
  </div>
);

export const AnnotationTableQuery = {
  fragments: {
    hits: () => Relay.QL`
      fragment on AnnotationConnection {
        pagination {
          sort
          total
          size
          offset
        }
        edges {
          node {
            id
            ${AnnotationTr.getFragment('node')}
          }
        }
      }
    `,
  },
};

const AnnotationTable = Relay.createContainer(
  AnnotationTableComponent,
  AnnotationTableQuery
);

export default AnnotationTable;

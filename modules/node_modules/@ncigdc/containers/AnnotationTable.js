/* @flow */

import React from 'react';
import Relay from 'react-relay';

import Pagination from '@ncigdc/components/Pagination';
import Showing from '@ncigdc/components/Pagination/Showing';

import AnnotationTr from './AnnotationTr';

import type { TTableProps } from './types';

export const AnnotationTableComponent = (props: TTableProps) => (
  <div>
    <Showing params={props.relay.route.params} total={props.hits.pagination.total} />
    <table>
      <thead>
        <tr>
          <th>UUID</th>
          <th>Case UUID</th>
          <th>Project</th>
          <th>Entity Type</th>
          <th>Entity UUID</th>
          <th>Category</th>
          <th>Classification</th>
          <th>Date Created</th>
        </tr>
      </thead>
      <tbody>
        {props.hits.edges.map(e => (
          <AnnotationTr {...e} key={e.node.id} />
        ))}
      </tbody>
    </table>
    <Pagination params={props.relay.route.params} total={props.hits.pagination.total} />
  </div>
);

export const AnnotationTableQuery = {
  fragments: {
    hits: () => Relay.QL`
      fragment on AnnotationConnection {
        pagination {
          sort
          total
          size
          offset
        }
        edges {
          node {
            id
            ${AnnotationTr.getFragment('node')}
          }
        }
      }
    `,
  },
};

const AnnotationTable = Relay.createContainer(
  AnnotationTableComponent,
  AnnotationTableQuery
);

export default AnnotationTable;

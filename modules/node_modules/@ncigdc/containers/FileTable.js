/* @flow */

import React from 'react';
import Relay from 'react-relay';

import Pagination from '@ncigdc/components/Pagination';
import Showing from '@ncigdc/components/Pagination/Showing';

import FileTr from './FileTr';

import type { TTableProps } from './types';

export const FileTableComponent = (props: TTableProps) => {
  const prefix = 'files';

  return (
    <div>
      <Showing prefix={prefix} params={props.relay.route.params} total={props.hits.pagination.total} />
      <table>
        <thead>
          <tr>
            <th>Access</th>
            <th>Name</th>
            <th>Cases</th>
            <th>Projects</th>
            <th>Category</th>
            <th>Format</th>
            <th>Size</th>
          </tr>
        </thead>
        <tbody>
          {props.hits.edges.map(e => (
            <FileTr {...e} key={e.node.id} />
        ))}
        </tbody>
      </table>
      <Pagination prefix={prefix} params={props.relay.route.params} total={props.hits.pagination.total} />
    </div>
  );
};

export const FileTableQuery = {
  fragments: {
    hits: () => Relay.QL`
      fragment on FileConnection {
        pagination {
          sort
          total
          size
          offset
        }
        edges {
          node {
            id
            ${FileTr.getFragment('node')}
          }
        }
      }
    `,
  },
};

const FileTable = Relay.createContainer(
  FileTableComponent,
  FileTableQuery
);

export default FileTable;

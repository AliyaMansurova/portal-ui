/* @flow */

import React from 'react';
import Relay from 'react-relay';

import Pagination from '@ncigdc/components/Pagination';
import Showing from '@ncigdc/components/Pagination/Showing';

import { Tr, Th } from '@ncigdc/uikit/Table';

import ProjectTr from './ProjectTr';

import type { TTableProps } from './types';

const styles = {
  table: {
    width: '100%',
    borderCollapse: 'collapse',
    borderSpacing: 0,
  },
};

export const ProjectTableComponent = (props: TTableProps) => (
  <div>
    <div style={{ backgroundColor: 'white', padding: '1rem' }}>
      <Showing
        docType="projects"
        params={props.relay.route.params}
        total={props.hits.pagination.total}
      />
    </div>
    <div style={{ overflowX: 'auto' }}>
      <table style={styles.table}>
        <thead>
          <Tr>
            <Th rowSpan="2">ID</Th>
            <Th rowSpan="2">Disease Type</Th>
            <Th rowSpan="2">Primary Site</Th>
            <Th rowSpan="2">Program</Th>
            <Th rowSpan="2">Cases</Th>
            <Th colSpan="6">Available Cases per Data Category</Th>
            <Th rowSpan="2">Files</Th>
          </Tr>
          <Tr>
            <Th>Seq</Th>
            <Th>Exp</Th>
            <Th>SNV</Th>
            <Th>CNV</Th>
            <Th>Clinical</Th>
            <Th>Bio</Th>
          </Tr>
        </thead>
        <tbody>
          {props.hits.edges.map((e, i) => (
            <ProjectTr {...e} key={e.node.id} index={i} />
          ))}
        </tbody>
      </table>
    </div>
    <Pagination params={props.relay.route.params} total={props.hits.pagination.total} />
  </div>
);

export const ProjectTableQuery = {
  fragments: {
    hits: () => Relay.QL`
      fragment on ProjectConnection {
        pagination {
          sort
          total
          size
          offset
        }
        edges @relay(plural: true) {
          node {
            id
            ${ProjectTr.getFragment('node')}
          }
        }
      }
    `,
  },
};

const ProjectTable = Relay.createContainer(
  ProjectTableComponent,
  ProjectTableQuery
);

export default ProjectTable;

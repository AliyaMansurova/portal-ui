/* @flow */

import React from 'react';
import Relay from 'react-relay';

import SideNavLayout from '@ncigdc/components/Layouts/SideNavLayout';
import Case from '@ncigdc/components/Case';

import FileTable from './FileTable';

export type TProps = {
  node: {
    case_id: string,
    project: {
      disease_type: string,
      name: string,
      primary_site: string,
      program: {
        name: string,
      },
      project_id: string,
    },
    submitter_id: string,
  },
};

export const CasePageComponent = (props: TProps) => (
  <SideNavLayout
    links={[
      { icon: 'table', id: 'summary', title: 'Summary' },
      { icon: 'calendar-plus-o', id: 'clinical', title: 'Clinical' },
      { icon: 'flask', id: 'biospecimen', title: 'Biospecimen' },
      { icon: 'bar-chart-o', id: 'frequent-mutations', title: 'Frequent Mutations' },
    ]}
    title={props.node.case_id}
    entityType={<i className="fa fa-user" />}
  >
    <Case node={props.node} />
  </SideNavLayout>
);

export const CasePageQuery = {
  initialVariables: {
    files_offset: null,
    files_size: null,
    files_sort: null,
    filters: null,
  },
  fragments: {
    node: () => Relay.QL`
      fragment on RepositoryCase {
        case_id
        submitter_id
        annotations {
          annotation_id
        }
        demographic {
          demographic_id
          ethnicity
          gender
          race
          year_of_birth
          year_of_death
        }
        diagnoses {
          diagnosis_id
          classification_of_tumor
          # alcohol_intensity not in model anymore?
          age_at_diagnosis
          days_to_birth
          days_to_death
          days_to_last_follow_up
          days_to_last_known_disease_status
          days_to_recurrence
          last_known_disease_status
          morphology
          primary_diagnosis
          prior_malignancy
          progression_or_recurrence
          site_of_resection_or_biopsy
          tissue_or_organ_of_origin
          tumor_stage
          tumor_grade
          vital_status
        }
        files {
          file_id
        }
        project {
          project_id
          name
          disease_type
          program {
            name
          }
          primary_site
        }
        samples {
          sample_id
          sample_type_id
          portions {
            portion_id
            submitter_id
            state
            analytes {
              analyte_id
              analyte_type
              submitter_id
              concentration
              state
              amount
              aliquots {
                aliquot_id
                concentration
                amount
                source_center
              }
            }
            slides {
              slide_id
              state
            }
          }
        }
        summary {
          experimental_strategies {
            experimental_strategy
            file_count
          }
          data_categories {
            data_category
            file_count
          }
        }
      }
    `,
    viewer: () => Relay.QL`
      fragment on Root {
        repository {
          files {
            hits(first: $files_size offset: $files_offset, filters: $filters) {
              ${FileTable.getFragment('hits')}
            }
          }
        }
      }
    `,
  },
};

const CasePage = Relay.createContainer(
  CasePageComponent,
  CasePageQuery
);

export default CasePage;

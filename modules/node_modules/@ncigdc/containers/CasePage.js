/* @flow */

import React from 'react';
import Relay from 'react-relay';

import SideNavLayout from '@ncigdc/components/Layouts/SideNavLayout';

import FileTable from './FileTable';

export type TProps = {
  node: {
    case_id: string,
    project: {
      disease_type: string,
      name: string,
      primary_site: string,
      program: {
        name: string,
      },
      project_id: string,
    },
    submitter_id: string,
  },
};

export const CasePageComponent = (props: TProps) => (
  <SideNavLayout
    links={[
      { icon: 'table', id: 'summary', title: 'Summary' },
      { icon: 'calendar-plus-o', id: 'clinical', title: 'Clinical' },
      { icon: 'flask', id: 'biospecimen', title: 'Biospecimen' },
      { icon: 'bar-chart-o', id: 'frequent-mutations', title: 'Frequent Mutations' },
    ]}
    title={props.node.case_id}
    entityType={<i className="fa fa-user" />}
  >
    <div>{props.node.case_id}</div>
    <div>{props.node.submitter_id}</div>
    <div>{props.node.project.project_id}</div>
    <div>{props.node.project.name}</div>
    <div>{props.node.project.disease_type}</div>
    <div>{props.node.project.program.name}</div>
    <div>{props.node.project.primary_site}</div>
    <FileTable hits={props.viewer.repository.files.hits} />
  </SideNavLayout>
);

export const CasePageQuery = {
  initialVariables: {
    files_offset: null,
    files_size: null,
    files_sort: null,
    filters: null,
  },
  fragments: {
    node: () => Relay.QL`
      fragment on RepositoryCase {
        case_id
        submitter_id
        project {
          project_id
          name
          disease_type
          program {
            name
          }
          primary_site
        }
      }
    `,
    viewer: () => Relay.QL`
      fragment on Root {
        repository {
          files {
            hits(first: $files_size offset: $files_offset, filters: $filters) {
              ${FileTable.getFragment('hits')}
            }
          }
        }
      }
    `,
  },
};

const CasePage = Relay.createContainer(
  CasePageComponent,
  CasePageQuery
);

export default CasePage;

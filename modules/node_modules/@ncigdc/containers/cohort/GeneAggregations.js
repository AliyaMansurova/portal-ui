/* @flow */

import React from 'react';
import Relay from 'react-relay';

import TermAggregation from '@ncigdc/components/Aggregations/TermAggregation';
import SuggestionFacet from '@ncigdc/components/Aggregations/SuggestionFacet';

import type { TBucket } from '@ncigdc/components/Aggregations/types';

import { withTheme } from '@ncigdc/theme';

export type TProps = {
  aggregations: {
    biotype: { buckets: [TBucket] },
    is_cancer_gene_census: { buckets: [TBucket] },
  },
  hits: {
    edges: Array<{|
      node: {|
       id: string,
     |},
   |}>,
 },
  setAutocomplete: Function,
  theme: Object,
};

export const GeneAggregationsComponent = (props: TProps) => (
  <div>
    <SuggestionFacet
      title="Gene"
      placeholder="Gene Symbol"
      hits={props.hits}
      setAutocomplete={props.setAutocomplete}
    />
    <TermAggregation
      style={{ borderTop: `1px solid ${props.theme.greyScale5}` }}
      field={'genes.biotype'}
      title="Type"
      buckets={props.aggregations.biotype.buckets}
    />
    <TermAggregation
      style={{ borderTop: `1px solid ${props.theme.greyScale5}` }}
      field={'genes.is_cancer_gene_census'}
      title="Curated Gene Set"
      buckets={props.aggregations.is_cancer_gene_census.buckets}
    />
  </div>
);

export const GeneAggregationsQuery = {
  fragments: {
    aggregations: () => Relay.QL`
      fragment on CohortGeneAggregations {
        biotype {
          buckets {
            doc_count
            key
          }
        }
        is_cancer_gene_census  {
          buckets {
            doc_count
            key
          }
        }
      }
    `,
  },
};


const GeneAggregations = Relay.createContainer(
  withTheme(GeneAggregationsComponent),
  GeneAggregationsQuery
);

export default GeneAggregations;
